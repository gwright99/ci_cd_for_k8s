# http://nginx.org/en/docs/ngx_core_module.html#worker_processes
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    upstream backend {
        server ktower-backend:8080;
    }
    # hide nginx version
    server_tokens off;

    # define the `$x_port` variable which holds the request port, if specified
    # fetching it from the `$http_host^ variable (note it includes the `:` prefix)
    map $http_host $x_port {
      "~^[^\:]+:(?<p>\d+)$" :$p;
    }

    # defines `$x_scheme` variable checking `$http_x_forwarded_proto` and falling back on `scheme`
    map $http_x_forwarded_proto $x_scheme {
      default $scheme;
      "~^(?<s>http|https)$" $s;
    }

    # Allow websockets connections
    map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }

    server {
        # listening port is defined in the file
        # /etc/nginx/conf.d/default.conf

        # Adding from privatenginx
        # ----------------------------------------
        # server_name  localhost;
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name csgitlab2.dev-seqera.net;
        ssl_certificate /privatecert/csgitlab2.dev-seqera.net.crt;
        ssl_certificate_key /privatekey/csgitlab2.dev-seqera.net.key;

        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Permitted-Cross-Domain-Policies none;
        add_header Referrer-Policy same-origin;
        add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.$host https://www.google.com https://fonts.googleapis.com https://fonts.gstatic.com https://www.gstatic.com; img-src 'self' https://*.$host https://*.gravatar.com https://*.githubusercontent.com blob: data:; worker-src blob:; child-src 'self' https://www.google.com https://*.$host blob:" always;
        add_header Permissions-Policy "geolocation=(),midi=(),sync-xhr=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()";

        root   /usr/share/nginx/html;
        index  index.html index.htm;
        include /etc/nginx/mime.types;

        gzip on;
        gzip_min_length 1000;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        location /api/ {
            proxy_pass http://backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $x_scheme;
            proxy_set_header X-Forwarded-Host $host$x_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 300s;
        }

        # Forward content endpoint to manage the user generated content
        location /content/ {
            proxy_pass http://backend/content/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $x_scheme;
            proxy_set_header X-Forwarded-Host $host$x_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_read_timeout 300s;

            # Remove header to allow to be shown in an iframe if it's serve from a non-origin domain
            add_header X-Frame-Options "";
        }

        location ~ ^/(oauth|openapi)/(.*)$ {
            set $query $2;
            proxy_pass http://backend/$1/$query$is_args$args;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $x_scheme;
            proxy_set_header X-Forwarded-Host $host$x_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_read_timeout 300s;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /index.html {
            ## this should only be used for the index page
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            ## this should be replicated otherwise are not included due to the use
            ## of the `add_header Cache-Control` above
            ## those should be in sync with the ones declared in the `server` scope
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Permitted-Cross-Domain-Policies none;
            add_header Referrer-Policy same-origin;
            add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.$host https://www.google.com https://fonts.googleapis.com https://fonts.gstatic.com https://www.gstatic.com; img-src 'self' https://*.$host https://*.gravatar.com https://*.githubusercontent.com blob: data:; worker-src blob:; child-src 'self' https://www.google.com https://*.$host blob:" always;
            add_header Permissions-Policy "geolocation=(),midi=(),sync-xhr=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()";
        }
    }
}
